@page
@model Academy.Areas.Admin.Pages.UserManagment.IndexModel
@{
    ViewBag.Title = "Users";
    ViewBag.pTitle = "List";
    ViewBag.pageTitle = "Users";
    Layout = "~/Pages/Shared/_Layout.cshtml";
}

<div class="row">
    <div class="col-xxl-12 col-xl-12">
        <div class="card card-height-100">
            <div class="card-header align-items-center d-flex">
                <h4 class="card-title mb-0 flex-grow-1">Users</h4>
                <div class="flex-shrink-0">
                    <button type="button" class="btn btn-success add-btn"
                            data-bs-toggle="modal" id="create-btn"
                            data-bs-target="#AddModal">
                        <i class="ri-add-line align-bottom me-1"></i> Add
                    </button>

                </div>
            </div>
            <!-- end card header -->
            <!-- card body -->
            <div class="card-body">
                @(
                        Html.DevExtreme().DataGrid<Academy.ViewModels.UsersDataGridVM>()
                        .DataSource(ds => ds.Mvc().Controller("Data").LoadAction("GetUsers").Key("Id"))
                        .RemoteOperations(true)
                        .ColumnHidingEnabled(true)
                        .Width("100%")
                        .Columns(columns =>
                        {

                        columns.AddFor(m => m.FullName).Caption("FullName");
                        columns.AddFor(m => m.UserName).Caption("UserName");
                        columns.AddFor(m => m.Email).Caption("Email");
                        columns.AddFor(m => m.Phone).Caption("Phone");


                            
                        })
                    .ShowColumnLines(true)
                    .ShowRowLines(true)
                    //.Export(e => e.Enabled(true).AllowExportSelectedData(true))
                    //.OnExporting("exporting")
                    .FilterRow(f => f.Visible(true))
                    .HeaderFilter(f => f.Visible(true))
                    .GroupPanel(p => p.Visible(true))
                    //.Selection(s => s.Mode(SelectionMode.Multiple))
                    .Paging(paging => paging.PageSize(5).Enabled(true))
                    .WordWrapEnabled(true)
                    .ColumnAutoWidth(true)
                    .ShowBorders(true)
                    //.ColumnChooser(c => c.Enabled(true))
                    .ColumnFixing(c => c.Enabled(true))
                    .Grouping(g => g.AutoExpandAll(false))
                    .Pager(pager =>
                    {
                        pager.Visible(true);
                        pager.DisplayMode(GridPagerDisplayMode.Full);
                        pager.ShowPageSizeSelector(true);
                        pager.AllowedPageSizes(new JS("[5,10,20,50,100,'all']"));
                        pager.ShowInfo(true);
                        pager.ShowNavigationButtons(true);
                    })
                    .SearchPanel(searchPanel => searchPanel
                    .Visible(true)
                    .Placeholder("SearchTxt"))
                    .RemoteOperations(false)
                    @*  .Summary(s => s
                .TotalItems(totalItems =>
                {
                totalItems.AddFor(m => m.BranchId).SummaryType(SummaryType.Count);
                })
                .GroupItems(groupItems =>
                {
                groupItems.Add().SummaryType(SummaryType.Count);
                })
                ) *@
                    )
            </div>




            
            <!-- end card body -->

        </div>
    </div>

</div>



<div class="modal fade" id="AddModal" tabindex="-1" aria-labelledby="AddModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">

            <div class="modal-header bg-light p-3">
                <h5 class="modal-title" id="exampleModalLabel">Add User</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" id="close-modal"></button>
            </div>

            <form asp-area="Admin" asp-page="/UserManagment/Index" asp-page-handler="AddUser">
                <div class="modal-body">
                    <input type="hidden" id="id-field" />
                    <div class="row g-3">
                        <div class="col-lg-6">
                            <div>
                                <label for="@Model.userVM.FullName" class="form-label">FullName</label>
                                <input type="text" asp-for="@Model.userVM.FullName" class="form-control" placeholder="Enter FullName" required />
                                <span asp-validation-for="@Model.userVM.FullName" class="text-danger"></span>
                            </div>
                        </div>
                       
                        <div class="col-lg-6">
                            <div>
                                <label for="@Model.userVM.UserName" class="form-label">UserName</label>
                                <input type="text" asp-for="@Model.userVM.UserName" class="form-control" placeholder="Enter UserName" required />
                                <span asp-validation-for="@Model.userVM.UserName" class="text-danger"></span>
                            </div>
                        </div>
                         <div class="col-lg-6">
                            <div>
                                <label for="@Model.userVM.Password" class="form-label">Password <small class="text-danger">*</small></label>
                                <input type="password" asp-for="@Model.userVM.Password" class="form-control" placeholder="Enter Password" required />
                                <span asp-validation-for="@Model.userVM.Password" class="text-danger"></span>
                            </div>
                        </div>

                        <div class="col-lg-6">
                            <div>
                                <label for="@Model.userVM.Email" class="form-label">Email</label>
                                <input type="email" asp-for="@Model.userVM.Email" class="form-control" placeholder="Enter Email" required />
                            </div>
                        </div>


                       

                        <div class="col-lg-6">
                            <div>
                                <label for="@Model.userVM.Phone" class="form-label">Phone <small class="text-danger">*</small></label>
                                <input type="text" asp-for="@Model.userVM.Phone" class="form-control" placeholder="Enter Phone" required />
                                <span asp-validation-for="@Model.userVM.Phone" class="text-danger"></span>
                            </div>
                        </div>

                        <div class="col-lg-6">
                            <div>
                                <label for="@Model.userVM.Address" class="form-label">Address</label>
                                <input type="text" asp-for="@Model.userVM.Address" class="form-control" placeholder="Enter Address" required />
                                <span asp-validation-for="@Model.userVM.Address" class="text-danger"></span>
                            </div>
                        </div>

                        <div class="col-lg-12">
                            <label for="car-rental-name">Role <small class="text-danger">*</small></label>

                            <select asp-for="@Model.userVM.EntityType" id="RoleSelect" onclick="ChooseBranch(this.value)" class="form-select required" aria-label="Default select example" required>
                                <option selected disabled value="0">Select Role</option>
                                <option value="Admin">Admin</option>
                                <option value="GeneralManager"> General Manager</option>
                                <option value="Branchmanager">Branch manager</option>
                                <option value="Branchaccountant">Branch accountant</option>
                            </select>
                            <span asp-validation-for="@Model.userVM.EntityType" class="text-danger"></span>

                        </div>


                        <div class="col-lg-12" id="BranchDiv" style="display:none">
                            <label for="car-rental-name">Branch <small class="text-danger">*</small></label>

                            <select  id="BranchSelect" asp-for="@Model.userVM.BranchId" class="form-select required" aria-label="Default select example" required>
                                <span asp-validation-for="@Model.userVM.BranchId" class="text-danger"></span>

                            </select>

                        </div>


                       
                    </div>
                    <!--end row-->
                </div>
                <div class="modal-footer">
                    <div class="hstack gap-2 justify-content-end">
                        <button type="button" class="btn btn-light" data-bs-dismiss="modal">Close</button>
                        <button type="submit" asp-area="admin" asp-page="/UserManagment/Index" asp-page-handler="AddUser" class="btn btn-success" id="add-btn">Add</button>
                    </div>
                </div>
            </form>

        </div>
    </div>
</div>
<script>



    function ChooseBranch(Id) {
        console.log(Id);

        // AJAX Request
        if (Id == 'Branchmanager' || Id == "Branchaccountant") {
            $.ajax({
                url: "/admin/UserManagment?handler=GetBranches", // Adjust if using Razor Pages convention
                type: 'GET',
                success: function (data) {
                    console.log(data);

                    // Assuming `data` is an array of branch objects with `id` and `name` properties
                    const branchSelect = document.getElementById('BranchSelect');
                    branchSelect.innerHTML = ''; // Clear existing options

                    // Add default "Select a branch" option
                    const defaultOption = document.createElement('option');
                    defaultOption.textContent = 'Select a branch';
                    defaultOption.value = '';
                    defaultOption.disabled = true;
                    defaultOption.selected = true;
                    branchSelect.appendChild(defaultOption);

                    // Append new options from data
                    data.forEach(branch => {
                        const option = document.createElement('option');
                        option.value = branch.BranchId; // Assuming the branch ID is `id`
                        option.textContent = branch.BranchName; // Assuming the branch name is `name`
                        branchSelect.appendChild(option);
                    });
                    // Add the required attribute to the <select> element
                    branchSelect.setAttribute('required', 'required');

                    // Show the BranchDiv
                    document.getElementById('BranchDiv').style.display = 'block';
                },
                error: function (error) {
                    console.error('Error loading branches:', error);
                }
            });
        }
        else{

document.getElementById('BranchDiv').style.display = 'none';
        }
    }
</script>