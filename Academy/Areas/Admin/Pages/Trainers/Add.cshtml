@page
@model Academy.Areas.Admin.Pages.AddTrainer.AddModel
@Html.AntiForgeryToken()
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf
@{
    ViewBag.Title = "Trainers";
    ViewBag.pTitle = "Add Trainer";
    ViewBag.pageTitle = "Trainers";
    Layout = "~/Pages/Shared/_Layout.cshtml";
}


<div class="row">
    <div class="col-xxl-12">
        <div class="card">
            <div class="card-header align-items-center d-flex">
                <h4 class="card-title mb-0 flex-grow-1">Add Trainer</h4>
               
            </div><!-- end card header -->
            <div class="card-body">
                <div class="live-preview">
                    <div asp-validation-summary="All" class="text-danger"></div>
                    <form method="post" enctype="multipart/form-data" >
                        <div class="mb-3">
                            <label asp-for="@Model.UserName" class="form-label">User Name</label>
                            <input asp-for="@Model.UserName" class="form-control" />
                            <span asp-validation-for="@Model.UserName" class="text-danger"></span>
                        </div>
                        <div class="mb-3">
                            <label asp-for="@Model.Trainer.TrainerName" class="form-label">Trainer Name</label>
                            <input  asp-for="@Model.Trainer.TrainerName"  class="form-control" />
                            <span asp-validation-for="@Model.Trainer.TrainerName" class="text-danger"></span>   
                        </div>
                        
                        <div class="mb-3">
                            <label asp-for="@Model.Trainer.TrainerEmail" class="form-label">Trainer Email</label>
                            <input asp-for="@Model.Trainer.TrainerEmail" class="form-control" />
                            <span asp-validation-for="@Model.Trainer.TrainerEmail" class="text-danger"></span>
                        </div>
                         <div class="mb-3">
                            <label asp-for="@Model.Trainer.TrainerPhone" class="form-label">Trainer Phone</label>
                            <input  asp-for="@Model.Trainer.TrainerPhone"  class="form-control" />
                            <span asp-validation-for="@Model.Trainer.TrainerPhone" class="text-danger"></span>   
                        </div>

                         <div class="mb-3">
                            <label asp-for="@Model.Trainer.TrainerAddress" class="form-label">Trainer Address</label>
                            <input  asp-for="@Model.Trainer.TrainerAddress"  class="form-control" />
                            <span asp-validation-for="@Model.Trainer.TrainerAddress" class="text-danger"></span>   
                        </div>
                        @if (Model.Trainer.HiringDate != null)
                        {
                            <div class="mb-3">
                                <label asp-for="@Model.Trainer.HiringDate" class="form-label">Trainer Hiring Date</label>
                                <input type="date" asp-for="@Model.Trainer.HiringDate" class="form-control" />
                                <span asp-validation-for="@Model.Trainer.HiringDate" class="text-danger"></span>
                            </div>
                        }
                        else
                        {
                            <div class="mb-3">
                                <label asp-for="@Model.Trainer.HiringDate" class="form-label">Trainer Hiring Date</label>
                                <input type="date" asp-for="@Model.Trainer.HiringDate" class="form-control" value="" />
                                <span asp-validation-for="@Model.Trainer.HiringDate" class="text-danger"></span>
                            </div>
                        }

                        <div class="mb-3">
                            <label class="form-label" asp-for="@Model.Trainer.BranchId">Branch</label>
                            <select  onchange="GetBranchDepartments(this.value)" asp-for=" @Model.Trainer.BranchId" asp-items="@(new SelectList(Model.Branches, "BranchId", "BranchName"))" class="form-select"  >
                                <option selected disabled value="0">Choose</option>
                               
                            </select>
                         
                            <span asp-validation-for="@Model.Trainer.BranchId" class="text-danger"></span>

                        </div><!--end col-->

                        <div class="mb-3">
                            <label class="form-label" for="inlineFormSelectPref">Department</label>
                            <select onchange="GetDepartmentCategories(this.value)" asp-for="@Model.Trainer.DepartmentId" asp-items="@(new SelectList(Model.Departments, "DepartmentId", "DepartmentName"))" class="form-select" id="inlineFormSelectPref">
                                <option selected disabled value="0">Choose...</option>

                            </select>
                            <span asp-validation-for="@Model.Trainer.DepartmentId" class="text-danger"></span>
                        </div><!--end col-->

                        <div class="mb-3" id="Category">
                            <label for="CategoryId" class="form-label ">Categories</label>
                            <select asp-for="@Model.Trainer.SelectedCategories" class=" form-select custom-select" asp-items="@(new SelectList(Model.Categories, "CategoryId", "CategoryName"))"
                                   multiple 
                                    id="CategoryId">

                             <option  disabled value="0">Choose...</option> 
                               
                            </select>

                            <span asp-validation-for="@Model.Trainer.SelectedCategories" class="text-danger"></span>
                           
                        </div><!--end col-->

                        <div class="mb-3">
                            <label  class="form-label" asp-for="@Model.Trainer.Password">Password</label>
                            <div class="position-relative auth-pass-inputgroup mb-3">
                                <input  asp-for="@Model.Trainer.Password" class="form-control pe-5 password-input" id="passwordInput" >
                                <span class="input-group-text" id="togglePassword" onclick="togglePassword('passwordInput', 'togglePassword')">
                                    <i class="fa fa-eye"></i> <!-- Font Awesome Eye Icon -->
                                </span>
                            </div>
                            <span asp-validation-for="@Model.Trainer.Password" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label  class="form-label" asp-for="@Model.Trainer.ConfirmPassword">Confirm Password</label>
                            <div class="position-relative auth-pass-inputgroup mb-3">
                                <input type="password" asp-for="@Model.Trainer.ConfirmPassword" class="form-control pe-5 password-input" id="confirmPasswordInput" >
                                <span class="input-group-text" id="toggleConfirmPassword" onclick="togglePassword('confirmPasswordInput', 'toggleConfirmPassword')">
                                    <i class="fa fa-eye"></i> <!-- Font Awesome Eye Icon -->
                                </span>
                            </div>
                            <span asp-validation-for="@Model.Trainer.ConfirmPassword" class="text-danger"></span>
                        </div>
                         <div class="mb-3">
                          
                                   
                                        <label for="fileUpload" class="form-label">Choose an Image</label>
                                        <div class="input-group">
                                    <input type="file" accept=".png, .jpg, .jpeg" class="form-control" id="fileUpload" name="fileUpload" />
                                       
                                        </div>
                                   

                               
                        </div>
                        <div class="text-end">
                            <button type="submit" class="btn btn-primary">Add Trainer</button>
                        </div>
                    </form>
                </div>
                
            </div>
        </div>
    </div>
    
</div><!--end row-->



<script>

  
        $(document).ready(function() {
            $('.custom-select').select2({
             placeholder: "Choose...",
                //  allowClear:false
            });
            });

    function GetBranchDepartments( value) {
        console.log(value)
        // Send AJAX request to the controller's action method
        
        if(value!=""&&value!=0){
            $.ajax({
                url: "/admin/Trainers/Add?handler=GetDepartments", // Adjust for Razor Pages if needed
                type: 'GET',
                data: { id: value},
                success: function (data) {
                    console.log(data);
                    if (Array.isArray(data) && typeof data !== "string") {
                        // Find the select element
                        var select = $('#inlineFormSelectPref');
                        console.log(select);
                        select.empty(); // Clear existing options

                        // Add a default option
                        select.append('<option selected disabled  value="0" >Choose ...</option>');

                        // Loop through the data and append options
                        $.each(data, function (index, item) {
                            console.log(item)
                            select.append('<option value="' + item.DepartmentId + '">' + item.DepartmentName + '</option>');
                        });
                    }
                    else {
                        console.log('Error loading options:', error);
                    }
                  
                },
                error: function (error) {
                    console.log('Error loading options:', error);
                }
            });
        }

       
    };

    function togglePassword(inputId, iconId) {
        var passwordField = document.getElementById(inputId);
        var eyeIcon = document.getElementById(iconId).getElementsByTagName("i")[0];

        // Toggle the type between 'password' and 'text'
        if (passwordField.type === "password") {
            passwordField.type = "text"; // Show password
            eyeIcon.classList.remove("fa-eye");
            eyeIcon.classList.add("fa-eye-slash"); // Change icon to eye-slash
        } else {
            passwordField.type = "password"; // Hide password
            eyeIcon.classList.remove("fa-eye-slash");
            eyeIcon.classList.add("fa-eye"); // Change icon back to eye
        }
    }

    function GetDepartmentCategories(departmentId) {
        console.log("GetDepartmentCategories");
        console.log(departmentId);
        if (departmentId != "" && departmentId != 0) {
            $.ajax({
                url: "/admin/Trainers/Add?handler=CategoriesDepartment", // Adjust for Razor Pages if needed
                type: 'GET',
                data: { departmentId: departmentId }, // Include both value and userId in the data object,
              
                success: function (data) {
                    console.log(data);
                    if (Array.isArray(data) && typeof data !== "string") {
                         
                        
                              // Find the select element
                        var select = $('#CategoryId');
                        console.log(select);
                        select.empty(); // Clear existing options

                        // Add a default option
                       select.append('<option  disabled  value="0" >Choose ...</option>');

                        // Loop through the data and append options
                        $.each(data, function (index, item) {
                            console.log(item)
                            select.append('<option value="' + item.CategoryId + '">' + item.CategoryName + '</option>');
                        });
                        }
                      
                    
                         else {
                        console.log('Error loading options:', error);
                    }

                },
                failure: function (response) {
                   console.log('Error loading options:', error);
                }
            });
        }


    }


    // function validateForm() {

    //     var CatId = document.getElementById("CategoryId").value
    //     console.log(CatId)
    //     var CatSpanId = document.getElementById("CategorySpanId")

    //     if (CatId == 0) {
    //         CatSpanId.style.display = "flex";
    //         return false;
    //     }

    //     CatSpanId.style.display = "none";
    //     return true;
    // }
</script>